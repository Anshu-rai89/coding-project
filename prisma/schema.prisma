// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  name         String
  availabilities Availability[]
  slots        Slot[]        // Relation to slots
  email         String   @unique
  password      String
  timeZone      String   @default("UTC")         // Default time zone
  slotDuration  Int      @default(60)            // Default slot duration (in minutes)
  dayStartTime  String   @default("08:00")       // Default day start time (24-hour format)
  dayEndTime    String   @default("17:00")       // Default day end time (24-hour format)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}


model Availability {
  id          Int       @id @default(autoincrement())
  userId      Int       // Relation field (indexed via composite index below)
  user        User      @relation(fields: [userId], references: [id])
  date        DateTime  // Store availability for a specific date
  isAvailable Boolean   @default(true)  // Whether the user is available on this date
  createdAt   DateTime  @default(now())
   slots       Slot[]   @relation("AvailabilitySlots")

  // Composite index on userId and date
  @@index([userId, date], name: "user_date_idx")
  @@unique([userId, date]) 
}

model Slot {
  id          Int       @id @default(autoincrement())
  userId      Int       // Relation field (indexed via composite index below)
  user        User      @relation(fields: [userId], references: [id])
  date        DateTime  // The date for which the slot is available
  startTime   String    // Slot start time in 24-hour format, e.g., "08:00"
  endTime     String    // Slot end time in 24-hour format, e.g., "09:00"
  available   Boolean   @default(true)  // Is this slot available?
  isDeleted   Boolean   @default(false) // Soft delete flag for the slot
  createdAt   DateTime  @default(now())
  availability Availability @relation("AvailabilitySlots", fields: [availabilityId], references: [id])
  availabilityId Int

  // Composite index on userId, date, and startTime for fast querying
  @@index([userId, date, startTime], name: "user_date_startTime_idx")
  @@unique([userId, date, startTime, endTime])
  @@unique([availabilityId, startTime, endTime]) 
}

